% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mldfm_subsampling.R
\name{mldfm_subsampling}
\alias{mldfm_subsampling}
\title{Subsampling Procedure for MLDFM Estimation}
\usage{
mldfm_subsampling(
  data,
  blocks = 1,
  block_ind = NULL,
  r = c(1),
  method = 0,
  tol = 1e-06,
  max_iter = 1000,
  n_samples = 10,
  sample_size = 0.9,
  seed = NULL
)
}
\arguments{
\item{data}{A numeric matrix or data frame containing the time series data. Rows represent time points; columns represent observed variables.}

\item{blocks}{Integer. The number of blocks into which the data is divided.}

\item{block_ind}{A vector of integers indicating the end index of each block. Must be of length \code{blocks} and in increasing order. Required if \code{blocks > 1}.}

\item{r}{A vector of integers specifying the number of factors to extract for each node in the block hierarchy. Its length must equal \code{2^blocks - 1}, corresponding to all nodes in the hierarchical tree.}

\item{method}{Integer. The method used to initialize the factors: \code{0} for Canonical Correlation Analysis (CCA), \code{1} for Principal Component Analysis (PCA).}

\item{tol}{Numeric. The tolerance level for the residual sum of squares (RSS) minimization process. Used as a convergence criterion.}

\item{max_iter}{Integer. The maximum number of iterations allowed for the RSS minimization process.}

\item{n_samples}{Number of subsamples to generate.}

\item{sample_size}{Proportion of the original sample to retain (e.g., 0.9 for 90\%).}

\item{seed}{Optional integer. Seed for reproducibility of the subsampling process. If \code{NULL}, random draws will differ each run.}
}
\value{
A list of \code{mldfm} objects, one for each subsample.
}
\description{
Repeatedly applies the MLDFM estimation to randomly drawn subsamples of the input data.
}
\examples{
\donttest{
data <- matrix(rnorm(1000), nrow = 100, ncol = 519)
block_ind <- c(63, 311, 519)  # Defines 3 blocks
r <- c(1, 1, 1, 1, 1, 1, 1)   # 2^3 - 1 = 7 nodes
result <- mldfm_subsampling(data, blocks = 3, block_ind = block_ind, r = r, 
n_samples = 100, sample_size = 0.9)
}

}
